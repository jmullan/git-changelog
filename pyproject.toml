[project]
name = "git-changelog"
version = "1.0.0"
description = "Produce a CHANGELOG from your git log."
authors = [
    {name = "Jesse Mullan", email="jmullan@gmail.com"}
]
classifiers = [
    "Topic :: Software Development",
    "Intended Audience :: Developers"
]
readme = "README.md"
requires-python = ">=3.11"
keywords = ["git"]
dependencies = [
    "jmullan_logging",
    "jmullan_cmd"
]

[project.optional-dependencies]
dev = [
    "black",
    "isort",
    "mypy",
    "pip",
    "pytest",
    "ruff>=0.1.8"
]

[project.urls]
homepage = "https://github.com/jmullan/git-changelog"
documentation = "https://github.com/jmullan/git-changelog"
repository = "https://github.com/jmullan/git-changelog"

[project.scripts]
git-changelog = "jmullan.git_changelog.cli:main"

[build-system]
requires = [
    "hatchling"
]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/jmullan"]


[tool.ruff]
line-length = 100
lint.select = [
  "E",   # pycodestyle
  "F",   # pyflakes
  "UP",  # pyupgrade
  # "D",   # pydocstyle
  "I",   # isort
]

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 100
extend_skip = "migrations"
order_by_type = false
combine_as_imports = true
known_third_party = "django"
known_internal = ["jmullan", "jmullan_cmd", "jmullan_logging"]
known_first_party = []
sections=["FUTURE", "STDLIB", "THIRDPARTY", "INTERNAL", "FIRSTPARTY", "LOCALFOLDER"]

[tool.black]  # https://black.readthedocs.io/en/stable/pyproject_toml.html
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
# Black only looks at python files, so we only need to exclude directories
# that contain python files we don't want to touch, or directories that are
# so huge we don't want to even scan them.
exclude = '''  # exclude paths that match this regex
  (
    /\.            |  # files/dirs that start with a literal dot
    /__pycache__/  |  # pycache directories are large and never interesting
    /migrations/      # generated migrations
  )
'''
