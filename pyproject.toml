[project]
name = "git-changelog"
version = "1.0.0"
description = "Produce a CHANGELOG from your git log."
authors = [
    {name = "Jesse Mullan", email="jmullan@gmail.com"}
]
classifiers = [
    "Topic :: Software Development",
    "Intended Audience :: Developers"
]
readme = "README.md"
requires-python = ">=3.11"
keywords = ["git"]

[project.urls]
homepage = "https://github.com/jmullan/git-changelog"
documentation = "https://github.com/jmullan/git-changelog"
repository = "https://github.com/jmullan/git-changelog"

[build-system]
requires = [
    "build",
    "bumpr",
    "pip",
    "poetry-core>=1.0.0"
]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "git-changelog"
version = "1.0.0"
description = "Produce a CHANGELOG from your git log."
authors = [
    "Jesse Mullan <jmullan@gmail.com>"
]
maintainers = [
    "Jesse Mullan <jmullan@gmail.com>"
]
readme = "README.md"
homepage = "https://github.com/jmullan/git-changelog"
documentation = "https://github.com/jmullan/git-changelog"
repository = "https://github.com/jmullan/git-changelog"
keywords = ["git"]
classifiers = [
    "Topic :: Software Development",
    "Intended Audience :: Developers"
]
packages = [
    { include = "jmullan", from = "src"}
]
include = ["README.md"]

[tool.poetry.scripts]
git-changelog = 'jmullan.git_changelog.cli:main'

[tool.poetry.dependencies]
python = ">=3.11"

[tool.poetry.group.dev.dependencies]
python = ">=3.11"
black = "*"
bumpr = "*"
coverage = "*"
isort = "*"
mypy = "*"
pip = "*"
pytest = "*"
ruff = ">=0.1.8"

[tool.ruff]
line-length = 100
select = [
  "E",   # pycodestyle
  "F",   # pyflakes
  "UP",  # pyupgrade
  # "D",   # pydocstyle
  "I",   # isort
]

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 100
extend_skip = "migrations"
order_by_type = false
combine_as_imports = true
known_third_party = "django"
known_internal = ["jmullan"]
known_first_party = []
sections=["FUTURE", "STDLIB", "THIRDPARTY", "INTERNAL", "FIRSTPARTY", "LOCALFOLDER"]

[tool.black]  # https://black.readthedocs.io/en/stable/pyproject_toml.html
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
# Black only looks at python files, so we only need to exclude directories
# that contain python files we don't want to touch, or directories that are
# so huge we don't want to even scan them.
exclude = '''  # exclude paths that match this regex
  (
    /\.            |  # files/dirs that start with a literal dot
    /__pycache__/  |  # pycache directories are large and never interesting
    /migrations/      # generated migrations
  )
'''
